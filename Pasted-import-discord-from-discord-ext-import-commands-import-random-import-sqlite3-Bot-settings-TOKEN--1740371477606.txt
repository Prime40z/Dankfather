import discord
from discord.ext import commands
import random
import sqlite3

# Bot settings
TOKEN = "MTM0MzQzMzAxNjg5ODM1NTIyMg.GmXLqP.2kLjUTrJa3r-IG3fP9Em7FjOADQl9T8P2eLRDU"
ENTRY_THRESHOLD = 10000  # 1 entry per 10,000 coins donated
TAX_RATE = 0.25  # 25% tax

# Database setup
conn = sqlite3.connect("lottery.db")
c = conn.cursor()
c.execute("""
    CREATE TABLE IF NOT EXISTS donations (
        user_id INTEGER PRIMARY KEY, 
        total_donated INTEGER DEFAULT 0, 
        total_entries INTEGER DEFAULT 0
    )
""")
conn.commit()

# Bot setup with correct intents
intents = discord.Intents.default()
intents.message_content = True  # Required for command processing
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f"✅ Logged in as {bot.user}")

@bot.command()
async def donate(ctx, amount: int):
    """ Command to log a donation. """
    if amount <= 0:
        await ctx.send("❌ Please enter a valid donation amount.")
        return

    donor = ctx.author.id
    
    c.execute("SELECT total_donated, total_entries FROM donations WHERE user_id = ?", (donor,))
    row = c.fetchone()
    
    if row:
        total_donated, total_entries = row
        total_donated += amount
        new_entries = amount // ENTRY_THRESHOLD
        total_entries += new_entries
        c.execute("UPDATE donations SET total_donated = ?, total_entries = ? WHERE user_id = ?", (total_donated, total_entries, donor))
    else:
        new_entries = amount // ENTRY_THRESHOLD
        c.execute("INSERT INTO donations (user_id, total_donated, total_entries) VALUES (?, ?, ?)", (donor, amount, new_entries))
    
    conn.commit()
    await ctx.send(f"🎉 {ctx.author.mention} donated {amount:,} coins! You now have {new_entries} new entries.")

@bot.command()
async def prize(ctx):
    """ Calculate and show the prize after 25% tax. """
    c.execute("SELECT SUM(total_donated) FROM donations")
    total_donations = c.fetchone()[0] or 0
    taxed_prize = total_donations * (1 - TAX_RATE)
    await ctx.send(f"💰 Total donations: {total_donations:,} coins.\n🏆 Prize after tax: {taxed_prize:,.0f} coins.")

@bot.command()
async def myentries(ctx):
    """ Check user's total entries. """
    c.execute("SELECT total_entries FROM donations WHERE user_id = ?", (ctx.author.id,))
    user_entries = c.fetchone()
    user_entries = user_entries[0] if user_entries else 0
    await ctx.send(f"🎟️ {ctx.author.mention}, you have {user_entries} lottery entries!")

@bot.command()
async def pickwinner(ctx):
    """ Admin command to pick a random winner based on weighted entries. """
    c.execute("SELECT user_id, total_entries FROM donations")
    entries = c.fetchall()
    
    weighted_pool = [user_id for user_id, count in entries for _ in range(count)]
    winner = random.choice(weighted_pool) if weighted_pool else None
    
    if winner:
        winner_user = await bot.fetch_user(winner)
        await ctx.send(f"🎉 The lottery winner is {winner_user.mention}! Congratulations!")
    else:
        await ctx.send("❌ No valid entries found.")

# Run bot
bot.run(TOKEN)